#include <stdio.h>

#define MAX_VERTICES 100

int isCompleteGraph(int graph[MAX_VERTICES][MAX_VERTICES], int V) {
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            if (i != j && graph[i][j] == 0) {
                return 0; // Not a complete graph
            }
        }
    }
    return 1; // It's a complete graph
}

int isRegularGraph(int graph[MAX_VERTICES][MAX_VERTICES], int V) {
    int degree = 0; // The degree of the first vertex

    for (int i = 0; i < V; i++) {
        int vertexDegree = 0;
        for (int j = 0; j < V; j++) {
            vertexDegree += graph[i][j];
        }
        if (i == 0) {
            degree = vertexDegree;
        } else if (degree != vertexDegree) {
            return 0; // Not a regular graph
        }
    }
    return 1; // It's a regular graph
}

int main() {
    int V; // Number of vertices
    printf("Enter the number of vertices: ");
    scanf("%d", &V);

    int graph[MAX_VERTICES][MAX_VERTICES];
    
    printf("Enter the adjacency matrix (0 for no edge, 1 for an edge):\n");
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    if (isCompleteGraph(graph, V)) {
        printf("The graph is a complete graph.\n");
    } else if (isRegularGraph(graph, V)) {
        printf("The graph is a regular graph.\n");
    } else {
        printf("The graph is neither a complete graph nor a regular graph.\n");
    }

    return 0;
}
